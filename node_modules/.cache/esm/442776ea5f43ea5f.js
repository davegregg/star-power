let User;_5f4‍.x([["connectToMongo",()=>connectToMongo],["handleStar",()=>handleStar],["checkIfUser",()=>checkIfUser],["checkIfUserHasEnoughStars",()=>checkIfUserHasEnoughStars]]);_5f4‍.w("./models/User",[["User",["User"],function(v){User=v}]]);const mongoose = require("mongoose");

let connectedToDB = false;

       function connectToMongo() {
	if (!connectedToDB) {
		mongoose.connect(process.env.MONGO_URI, {
			useNewUrlParser: true,
			useUnifiedTopology: true,
		});
		const db = mongoose.connection;
		db.on("error", _5f4‍.g.console.error.bind(_5f4‍.g.console, "connection error:"));
		db.once("open", function () {
			// we're connected!
			console.log("Connected to MongoDB");
		});
		connectedToDB = true;
	} else {
		console.log("Already connected");
	}
}

       function handleStar() {}

       function checkIfUser(username) {
	User.findOne({ username: username }).exec(function (err, user) {
		if (user) {
			return;
		} else {
			const newUser = new User({
				username: username,
				stars: 2,
				amountGiven: 0,
			});

			newUser.save((err) => {
				if (err) {
					_5f4‍.g.console.log(err);
				}
				console.log("User Created");
			});
		}
	});
}

       function checkIfUserHasEnoughStars(username, starsSent) {
	User.findOne({ username: username }).exec((err, user) => {
		if (!user) {
			console.log("There's been an error, you're not a user");
		}

		if (user.stars >= starsSent) {
			return false;
		} else {
			return true;
		}
	});
}
